# Generated by Django 5.2.6 on 2025-10-16 15:41

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('homepage', '0012_achievement_userachievement_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, default='', max_length=500)),
                ('icon_url', models.URLField(blank=True, max_length=500, null=True)),
                ('is_public', models.BooleanField(default=True)),
                ('invite_code', models.CharField(blank=True, max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServerChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, default='', max_length=200)),
                ('channel_type', models.CharField(choices=[('text', 'Text Channel'), ('announcements', 'Announcements')], default='text', max_length=20)),
                ('position', models.IntegerField(default=0)),
                ('is_private', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['position', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServerInvite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invite_code', models.CharField(max_length=20, unique=True)),
                ('max_uses', models.IntegerField(blank=True, null=True)),
                ('uses', models.IntegerField(default=0)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServerMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Admin'), ('moderator', 'Moderator'), ('member', 'Member')], default='member', max_length=20)),
                ('nickname', models.CharField(blank=True, default='', max_length=50)),
                ('can_manage_channels', models.BooleanField(default=False)),
                ('can_kick_members', models.BooleanField(default=False)),
                ('can_ban_members', models.BooleanField(default=False)),
                ('can_manage_messages', models.BooleanField(default=False)),
                ('is_muted', models.BooleanField(default=False)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-joined_at'],
            },
        ),
        migrations.CreateModel(
            name='ServerMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('content', models.TextField(max_length=2000)),
                ('is_pinned', models.BooleanField(default=False)),
                ('is_edited', models.BooleanField(default=False)),
                ('attachment_url', models.URLField(blank=True, max_length=500, null=True)),
                ('attachment_type', models.CharField(blank=True, default='', max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ServerMessageReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emoji', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AddField(
            model_name='server',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_servers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='serverchannel',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channels', to='homepage.server'),
        ),
        migrations.AddField(
            model_name='serverinvite',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='serverinvite',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites', to='homepage.server'),
        ),
        migrations.AddField(
            model_name='servermember',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='homepage.server'),
        ),
        migrations.AddField(
            model_name='servermember',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='server_memberships', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='servermessage',
            name='channel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='homepage.serverchannel'),
        ),
        migrations.AddField(
            model_name='servermessage',
            name='reply_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='homepage.servermessage'),
        ),
        migrations.AddField(
            model_name='servermessage',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='server_messages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='servermessagereaction',
            name='message',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='homepage.servermessage'),
        ),
        migrations.AddField(
            model_name='servermessagereaction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='server',
            index=models.Index(fields=['owner'], name='homepage_se_owner_i_0de6c2_idx'),
        ),
        migrations.AddIndex(
            model_name='server',
            index=models.Index(fields=['invite_code'], name='homepage_se_invite__6afcf3_idx'),
        ),
        migrations.AddIndex(
            model_name='server',
            index=models.Index(fields=['is_public'], name='homepage_se_is_publ_73d6a9_idx'),
        ),
        migrations.AddIndex(
            model_name='server',
            index=models.Index(fields=['-created_at'], name='homepage_se_created_30821b_idx'),
        ),
        migrations.AddIndex(
            model_name='serverchannel',
            index=models.Index(fields=['server', 'position'], name='homepage_se_server__965f96_idx'),
        ),
        migrations.AddIndex(
            model_name='serverchannel',
            index=models.Index(fields=['server', 'channel_type'], name='homepage_se_server__07d3b9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='serverchannel',
            unique_together={('server', 'name')},
        ),
        migrations.AddIndex(
            model_name='serverinvite',
            index=models.Index(fields=['invite_code'], name='homepage_se_invite__a12929_idx'),
        ),
        migrations.AddIndex(
            model_name='serverinvite',
            index=models.Index(fields=['server'], name='homepage_se_server__986097_idx'),
        ),
        migrations.AddIndex(
            model_name='servermember',
            index=models.Index(fields=['server', 'user'], name='homepage_se_server__dd9115_idx'),
        ),
        migrations.AddIndex(
            model_name='servermember',
            index=models.Index(fields=['server', 'role'], name='homepage_se_server__15901d_idx'),
        ),
        migrations.AddIndex(
            model_name='servermember',
            index=models.Index(fields=['-joined_at'], name='homepage_se_joined__9843d2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='servermember',
            unique_together={('server', 'user')},
        ),
        migrations.AddIndex(
            model_name='servermessage',
            index=models.Index(fields=['channel', 'timestamp'], name='homepage_se_channel_2a5d93_idx'),
        ),
        migrations.AddIndex(
            model_name='servermessage',
            index=models.Index(fields=['sender'], name='homepage_se_sender__c2e408_idx'),
        ),
        migrations.AddIndex(
            model_name='servermessage',
            index=models.Index(fields=['is_pinned'], name='homepage_se_is_pinn_9f7f7e_idx'),
        ),
        migrations.AddIndex(
            model_name='servermessagereaction',
            index=models.Index(fields=['message', 'emoji'], name='homepage_se_message_20daf2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='servermessagereaction',
            unique_together={('message', 'user', 'emoji')},
        ),
    ]
